{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/Contacts/Contacts.module.css","components/ContactFilter/ContactFilter.module.css","components/ContactForm/ContactForm.js","components/Contacts/Contacts.js","components/ContactList/ContactList.js","components/ContactFilter/ContactFilter.js","components/App/App.js","index.js"],"names":["module","exports","ContactForm","state","name","number","handleNameChange","e","target","value","setState","handleSubmit","preventDefault","props","onHandleSubmit","reset","this","onSubmit","className","styles","form","htmlFor","id","label","type","onChange","input","btn","Component","Contacts","onDeleteContact","container","text","onClick","ContactList","items","length","map","item","key","ContactFilter","onChangeFilter","findContact","contacts","contact","find","App","filter","changeFilter","addContact","shortid","generate","savingContact","oldContacts","alert","deleteContact","saveContacts","localStorage","getItem","JSON","parse","prevProps","prevState","setItem","stringify","filteredContacts","toLowerCase","includes","filterContact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f7a36f76.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1_nK8\",\"label\":\"ContactForm_label__2aEuf\",\"input\":\"ContactForm_input__YqavL\",\"btn\":\"ContactForm_btn__3n6di\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Contacts_container__BItTe\",\"text\":\"Contacts_text__30bqw\",\"btn\":\"Contacts_btn__3f_a_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"ContactFilter_label__hXr9P\",\"input\":\"ContactFilter_input__U0nfK\"};","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ContactForm.module.css';\r\n\r\nexport default class ContactForm extends Component {   \r\n    \r\n    static propTypes = {\r\n        onHandleSubmit: PropTypes.func.isRequired,\r\n      };\r\n\r\n    state = {\r\n        name: '',\r\n        number: '',\r\n      };  \r\n\r\n      handleNameChange = e => {\r\n          const {name, value} = e.target;\r\n        this.setState({\r\n            [name]: value,              \r\n        })\r\n      };\r\n\r\n      handleSubmit = e => {\r\n        e.preventDefault();\r\n          this.props.onHandleSubmit({...this.state});\r\n          this.reset();\r\n      };\r\n\r\n\r\n      reset =()=>{\r\n          this.setState(\r\n              { name: \"\", number: \"\"}\r\n          )\r\n      }; \r\n\r\n    render() {\r\n        const {name, number} = this.state;\r\n        \r\n        return (\r\n            <form onSubmit={this.handleSubmit} className={styles.form}>\r\n                \r\n            <label htmlFor={this.id} className={styles.label}> Name\r\n                <input type=\"text\"\r\n                value = {name}\r\n                name=\"name\"\r\n                onChange={this.handleNameChange}\r\n                id={this.id}  className={styles.input}\r\n               />\r\n            </label>\r\n            <label htmlFor={this.id}  className={styles.label}> Number\r\n                <input type=\"text\"\r\n                value = {number}\r\n                name=\"number\"\r\n                onChange={this.handleNameChange}\r\n                id={this.id} className={styles.input}\r\n               />\r\n            </label>\r\n            <button type=\"submit\" className = {styles.btn}>Add contact</button>\r\n    \r\n        </form>\r\n        );\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Contacts.module.css';\r\n\r\n\r\nconst Contacts = ({name, number, onDeleteContact}) => (\r\n    <div className={styles.container}>  \r\n<p className={styles.text}>{name}: {number}</p>\r\n<button type=\"button\" onClick={onDeleteContact} className={styles.btn}>Delete</button>\r\n</div>\r\n)\r\n\r\nContacts.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    number: PropTypes.string.isRequired,\r\n    onDeleteContact: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default Contacts;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Contact from '../Contacts/Contacts';\r\n\r\n\r\nconst ContactList = ({items, onDeleteContact}) =>\r\nitems.length > 0 && (\r\n    <ul>\r\n {items.map(item=><li key={item.id}> \r\n <Contact {...item} onDeleteContact={\r\n     ()=> onDeleteContact(item.id)}\r\n  />     \r\n   </li>)}\r\n    </ul>\r\n);\r\n\r\n\r\nContactList.propTypes = {\r\n    items: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id:PropTypes.string.isRequired        \r\n        }).isRequired,\r\n    ).isRequired,\r\n    onDeleteContact: PropTypes.func.isRequired,\r\n}       \r\n\r\n\r\nexport default ContactList;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ContactFilter.module.css';\r\n\r\n\r\nconst ContactFilter = ({value, onChangeFilter}) => (\r\n<label className={styles.label}> Find contact by name\r\n    <input type=\"text\" className = {styles.input} value = {value} \r\n    onChange = {onChangeFilter}/>\r\n</label>    \r\n);\r\n\r\nContactFilter.propTypes = {\r\n    value: PropTypes.string.isRequired,\r\n    onChangeFilter: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default ContactFilter;","import React, {Component, Fragment} from 'react';\nimport ContactForm from '../ContactForm/ContactForm';\nimport shortid from \"shortid\"\nimport ContactList from '../ContactList/ContactList';\nimport ContactFilter from '../ContactFilter/ContactFilter';\n\n\nconst filterContact = (contacts, filter) =>\n contacts.filter(contact=> \n    contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n\n\nconst findContact = (contacts, contact) =>\n contacts.find(item => item.name === contact.name);\n\nexport default class App extends Component {\n  state = {\n    contacts: [],\n    filter: '',  \n  };\n\n  componentDidMount() {\n    const saveContacts = localStorage.getItem(\"contacts\");\n    if(saveContacts){\n      this.setState({contacts: JSON.parse(saveContacts)})\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const {contacts} = this.state;\n \n    if(prevState.contacts !== contacts){\n      localStorage.setItem(\"contacts\", JSON.stringify(contacts))\n    }\n  };\n  \n\n\nchangeFilter = e => {\n  this.setState({filter: e.target.value})\n}\n\naddContact = contact => {\n const {contacts} = this.state\n const id = shortid.generate();\n const savingContact = {\n  id, \n  ...contact\n   };\n const oldContacts = this.state.contacts;\n const foundContact = findContact(contacts, contact)\n\n if(foundContact){\n  alert(`${contact.name} is already in contacts!`);\n  return;\n } \nif (contact.name.length >1 && contact.number.length > 1) {\n  this.setState(state=>({ contacts: [...oldContacts, savingContact] \n  }));\n\n} else if(contact.name.length <=1){\n  alert(\"Contact name is too small!\");\n \n} else if (contact.number.length <=1) {\n  alert(\"Contact number is too small!\");\n \n}\n  \n \n}\n  \ndeleteContact = id => {\n   this.setState( state=> ({\n     contacts:state.contacts.filter(contact=>contact.id !== id)     \n   }));\n};\n\n\n  render() {\n    const {contacts, filter} = this.state;\n    const filteredContacts = filterContact(contacts, filter);\n    return (\n      <> \n      <h1>Phonebook</h1>\n      <ContactForm onHandleSubmit = {this.addContact}     \n      />\n      <h2>Contacts</h2>\n      <ContactFilter value={filter} onChangeFilter={this.changeFilter}/>\n      {contacts.length >=2 && (\n      <ContactList items={filteredContacts} onDeleteContact={this.deleteContact}/>\n      )}\n      </>\n    );\n  }\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\n \n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}