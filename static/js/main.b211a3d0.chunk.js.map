{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/Contacts/Contacts.module.css","components/ContactFilter/ContactFilter.module.css","components/ContactForm/ContactForm.js","components/Contacts/Contacts.js","components/ContactList/ContactList.js","components/ContactFilter/ContactFilter.js","components/helpers/filterContact.js","components/helpers/findContact.js","components/App/App.js","index.js"],"names":["module","exports","ContactForm","state","name","number","handleNameChange","e","target","value","setState","handleSubmit","preventDefault","props","onHandleSubmit","reset","this","onSubmit","className","styles","form","htmlFor","id","label","type","onChange","input","btn","Component","Contacts","onDeleteContact","container","text","onClick","ContactList","items","length","map","item","key","ContactFilter","onChangeFilter","filterContact","contacts","filter","contact","toLowerCase","includes","findContact","find","App","changeFilter","addContact","shortid","generate","savingContact","oldContacts","alert","deleteContact","saveContacts","localStorage","getItem","JSON","parse","prevProps","prevState","setItem","stringify","filteredContacts","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b211a3d0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1_nK8\",\"label\":\"ContactForm_label__2aEuf\",\"input\":\"ContactForm_input__YqavL\",\"btn\":\"ContactForm_btn__3n6di\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Contacts_container__BItTe\",\"text\":\"Contacts_text__30bqw\",\"btn\":\"Contacts_btn__3f_a_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"ContactFilter_label__hXr9P\",\"input\":\"ContactFilter_input__U0nfK\"};","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ContactForm.module.css';\r\n\r\nexport default class ContactForm extends Component {\r\n  static propTypes = {\r\n    onHandleSubmit: PropTypes.func.isRequired,\r\n  };\r\n\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleNameChange = e => {\r\n    const { name, value } = e.target;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.onHandleSubmit({ ...this.state });\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n\r\n    return (\r\n      <form onSubmit={this.handleSubmit} className={styles.form}>\r\n        <label htmlFor={this.id} className={styles.label}>        \r\n          Name\r\n          <input\r\n            type=\"text\"\r\n            value={name}\r\n            name=\"name\"\r\n            onChange={this.handleNameChange}\r\n            id={this.id}\r\n            className={styles.input}\r\n          />\r\n        </label>\r\n        <label htmlFor={this.id} className={styles.label}>       \r\n          Number\r\n          <input\r\n            type=\"text\"\r\n            value={number}\r\n            name=\"number\"\r\n            onChange={this.handleNameChange}\r\n            id={this.id}\r\n            className={styles.input}\r\n          />\r\n        </label>\r\n        <button type=\"submit\" className={styles.btn}>\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Contacts.module.css';\r\n\r\nconst Contacts = ({ name, number, onDeleteContact }) => (\r\n  <div className={styles.container}>\r\n    <p className={styles.text}>\r\n      {name}: {number}\r\n    </p>\r\n    <button type=\"button\" onClick={onDeleteContact} className={styles.btn}>\r\n      Delete\r\n    </button>\r\n  </div>\r\n);\r\n\r\nContacts.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Contacts;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Contact from '../Contacts/Contacts';\r\n\r\nconst ContactList = ({ items, onDeleteContact }) =>\r\n  items.length > 0 && (\r\n    <ul>\r\n      {items.map(item => (\r\n        <li key={item.id}>\r\n          <Contact {...item} onDeleteContact={() => onDeleteContact(item.id)} />\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n\r\nContactList.propTypes = {\r\n  items: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n    }).isRequired,\r\n  ).isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ContactFilter.module.css';\r\n\r\nconst ContactFilter = ({ value, onChangeFilter }) => (\r\n  <label className={styles.label}>   \r\n    Find contact by name\r\n    <input\r\n      type=\"text\"\r\n      className={styles.input}\r\n      value={value}\r\n      onChange={onChangeFilter}\r\n    />\r\n  </label>\r\n);\r\n\r\nContactFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChangeFilter: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactFilter;\r\n","const filterContact = (contacts, filter) =>\r\n  contacts.filter(contact =>\r\n    contact.name.toLowerCase().includes(filter.toLowerCase()),\r\n  );\r\n\r\n\r\n\r\n  export default filterContact;","const findContact = (contacts, contact) =>\r\n  contacts.find(item => item.name === contact.name);\r\n\r\n  export default findContact;","import React, { Component, Fragment } from 'react';\nimport ContactForm from '../ContactForm/ContactForm';\nimport shortid from 'shortid';\nimport ContactList from '../ContactList/ContactList';\nimport ContactFilter from '../ContactFilter/ContactFilter';\nimport filterContact from '../helpers/filterContact';\nimport findContact from '../helpers/findContact';\n\n\nexport default class App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  componentDidMount() {\n    const saveContacts = localStorage.getItem('contacts');\n    if (saveContacts) {\n      this.setState({ contacts: JSON.parse(saveContacts) });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { contacts } = this.state;\n\n    if (prevState.contacts !== contacts) {\n      localStorage.setItem('contacts', JSON.stringify(contacts));\n    }\n  }\n\n  changeFilter = e => {\n    this.setState({ filter: e.target.value });\n  };\n\n  addContact = contact => {\n    const { contacts } = this.state;\n    const id = shortid.generate();\n    const savingContact = {\n      id,\n      ...contact,\n    };\n    const oldContacts = this.state.contacts;\n    const foundContact = findContact(contacts, contact);\n\n    if (foundContact) {\n      alert(`${contact.name} is already in contacts!`);\n      return;\n    }\n    if (contact.name.length > 1 && contact.number.length > 1) {\n      this.setState(state => ({ contacts: [...oldContacts, savingContact] }));\n    } else if (contact.name.length <= 1) {\n      alert('Contact name is too small!');\n    } else if (contact.number.length <= 1) {\n      alert('Contact number is too small!');\n    }\n  };\n\n  deleteContact = id => {\n    this.setState(state => ({\n      contacts: state.contacts.filter(contact => contact.id !== id),\n    }));\n  };\n\n  render() {\n    const { contacts, filter } = this.state;\n    const filteredContacts = filterContact(contacts, filter);\n    return (\n      <>\n        <h1>Phonebook</h1>\n        <ContactForm onHandleSubmit={this.addContact} />\n        <h2>Contacts</h2>\n        <ContactFilter value={filter} onChangeFilter={this.changeFilter} />\n        {contacts.length >= 2 && (\n          <ContactList\n            items={filteredContacts}\n            onDeleteContact={this.deleteContact}\n          />\n        )}\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\n \n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}