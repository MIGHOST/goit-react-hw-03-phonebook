{"version":3,"sources":["components/Contacts/Contacts.module.css","components/Button/Button.module.css","components/ContactFilter/ContactFilter.module.css","components/ContactForm/ContactForm.module.css","components/Button/Button.js","components/ContactForm/ContactForm.js","components/Contacts/Contacts.js","components/ContactList/ContactList.js","components/ContactFilter/ContactFilter.js","helpers/filterContact.js","helpers/findContact.js","components/App/App.js","index.js"],"names":["module","exports","Button","title","btnClass","disabled","styles","active","type","className","ContactForm","state","name","number","handleNameChange","e","target","value","setState","handleSubmit","preventDefault","props","onHandleSubmit","reset","this","onSubmit","form","htmlFor","id","label","onChange","input","length","Component","Contacts","onDeleteContact","container","text","onClick","btn","ContactList","items","map","item","key","ContactFilter","onChangeFilter","filterContact","contacts","filter","contact","toLowerCase","includes","findContact","find","App","changeFilter","addContact","shortid","generate","savingContact","oldContacts","toast","warn","deleteContact","saveContacts","localStorage","getItem","JSON","parse","prevProps","prevState","setItem","stringify","filteredContacts","position","autoClose","closeOnClick","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.53962470.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Contacts_container__BItTe\",\"text\":\"Contacts_text__30bqw\",\"btn\":\"Contacts_btn__3f_a_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__2dR6J\",\"disabled\":\"Button_disabled__2V3IP Button_button__2dR6J\",\"active\":\"Button_active__3fV9z Button_button__2dR6J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"ContactFilter_label__hXr9P\",\"input\":\"ContactFilter_input__U0nfK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1_nK8\",\"label\":\"ContactForm_label__2aEuf\",\"input\":\"ContactForm_input__YqavL\",\"btn\":\"ContactForm_btn__3n6di\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Button.module.css';\r\n\r\nconst Button = ({ title, disabled }) => {\r\n  const btnClass = disabled ? styles.disabled : styles.active;\r\n\r\n  return (\r\n    <button type=\"submit\" className={btnClass}>\r\n      {title}\r\n    </button>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  disabled: PropTypes.bool.isRequired,\r\n};\r\nexport default Button;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ContactForm.module.css';\r\nimport Button from '../Button/Button';\r\n\r\nexport default class ContactForm extends Component {\r\n  static propTypes = {\r\n    onHandleSubmit: PropTypes.func.isRequired,\r\n  };\r\n\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleNameChange = e => {\r\n    const { name, value } = e.target;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.onHandleSubmit({ ...this.state });\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n\r\n    return (\r\n      <form onSubmit={this.handleSubmit} className={styles.form}>\r\n        <label htmlFor={this.id} className={styles.label}>\r\n          Name\r\n          <input\r\n            type=\"text\"\r\n            value={name}\r\n            name=\"name\"\r\n            onChange={this.handleNameChange}\r\n            id={this.id}\r\n            className={styles.input}\r\n          />\r\n        </label>\r\n        <label htmlFor={this.id} className={styles.label}>\r\n          Number\r\n          <input\r\n            type=\"text\"\r\n            value={number}\r\n            name=\"number\"\r\n            onChange={this.handleNameChange}\r\n            id={this.id}\r\n            className={styles.input}\r\n          />\r\n        </label>\r\n        {name.length >= 1 && number.length >= 1 ? (\r\n          <Button title=\"Add contact\" disabled={false} />\r\n        ) : (\r\n          <Button title=\"Add contact\" disabled={true} />\r\n        )}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Contacts.module.css';\r\n\r\nconst Contacts = ({ name, number, onDeleteContact }) => (\r\n  <div className={styles.container}>\r\n    <p className={styles.text}>\r\n      {name}: {number}\r\n    </p>\r\n    <button type=\"button\" onClick={onDeleteContact} className={styles.btn}>\r\n      Delete\r\n    </button>\r\n  </div>\r\n);\r\n\r\nContacts.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Contacts;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Contact from '../Contacts/Contacts';\r\n\r\nconst ContactList = ({ items, onDeleteContact }) =>\r\n  items.length > 0 && (\r\n    <ul>\r\n      {items.map(item => (\r\n        <li key={item.id}>\r\n          <Contact {...item} onDeleteContact={() => onDeleteContact(item.id)} />\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n\r\nContactList.propTypes = {\r\n  items: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n    }).isRequired,\r\n  ).isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ContactFilter.module.css';\r\n\r\nconst ContactFilter = ({ value, onChangeFilter }) => (\r\n  <label className={styles.label}>   \r\n    Find contact by name\r\n    <input\r\n      type=\"text\"\r\n      className={styles.input}\r\n      value={value}\r\n      onChange={onChangeFilter}\r\n    />\r\n  </label>\r\n);\r\n\r\nContactFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChangeFilter: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactFilter;\r\n","const filterContact = (contacts, filter) =>\r\n  contacts.filter(contact =>\r\n    contact.name.toLowerCase().includes(filter.toLowerCase()),\r\n  );\r\n\r\n\r\n\r\n  export default filterContact;","const findContact = (contacts, contact) =>\r\n  contacts.find(item => item.name === contact.name);\r\n\r\n  export default findContact;","import React, { Component } from 'react';\nimport ContactForm from '../ContactForm/ContactForm';\nimport shortid from 'shortid';\nimport ContactList from '../ContactList/ContactList';\nimport ContactFilter from '../ContactFilter/ContactFilter';\nimport filterContact from '../../helpers/filterContact';\nimport findContact from '../../helpers/findContact';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport default class App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  componentDidMount() {\n    const saveContacts = localStorage.getItem('contacts');\n    if (saveContacts) {\n      this.setState({ contacts: JSON.parse(saveContacts) });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { contacts } = this.state;\n\n    if (prevState.contacts !== contacts) {\n      localStorage.setItem('contacts', JSON.stringify(contacts));\n    }\n  }\n\n  changeFilter = e => {\n    this.setState({ filter: e.target.value });\n  };\n\n  addContact = contact => {\n    const { contacts } = this.state;\n    const id = shortid.generate();\n    const savingContact = {\n      id,\n      ...contact,\n    };\n    const oldContacts = this.state.contacts;\n    const foundContact = findContact(contacts, contact);\n\n    if (foundContact) {\n      toast.warn(`${contact.name} is already in contacts!`);\n      return;\n    }\n    if (contact.name.length > 1 && contact.number.length > 1) {\n      this.setState(state => ({ contacts: [...oldContacts, savingContact] }));\n    } else if (contact.name.length <= 1) {\n      toast.warn('Contact name is too small!');\n    } else if (contact.number.length <= 1) {\n      toast.warn('Contact number is too small!');\n    }\n  };\n\n  deleteContact = id => {\n    this.setState(state => ({\n      contacts: state.contacts.filter(contact => contact.id !== id),\n    }));\n  };\n\n  render() {\n    const { contacts, filter } = this.state;\n    const filteredContacts = filterContact(contacts, filter);\n    return (\n      <>\n        <h1>Phonebook</h1>\n        <ContactForm onHandleSubmit={this.addContact} />\n        <ToastContainer position=\"top-right\" autoClose={3000} closeOnClick />\n        <h2>Contacts</h2>\n        <ContactFilter value={filter} onChangeFilter={this.changeFilter} />\n        {contacts.length >= 1 && (\n          <ContactList\n            items={filteredContacts}\n            onDeleteContact={this.deleteContact}\n          />\n        )}\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\n \n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}